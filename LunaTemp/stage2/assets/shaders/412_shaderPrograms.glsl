["\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0;\n    vs_TEXCOORD3.xyz = in_TEXCOORD1.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _NoisespeedXYEmissonZPowerW;\nuniform \tfloat _Usetexturecolor;\nuniform \tvec4 _Maincolor;\nuniform \tvec4 _Noisecolor;\nuniform \tvec4 _Dissolvenoise_ST;\nuniform \tvec4 _TextureNoise_ST;\nuniform \tfloat _Usetexturedissolve;\nuniform \tvec4 _DissolvespeedXY;\nuniform \tvec4 _Dissolvecolor;\nuniform \tfloat _Opacity;\nuniform lowp sampler2D _TextureNoise;\nuniform lowp sampler2D _Dissolvenoise;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec4 u_xlat10_1;\nfloat u_xlat2;\nbool u_xlatb2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nfloat u_xlat12;\nlowp float u_xlat10_12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = vs_TEXCOORD0.xy * _TextureNoise_ST.xy + _TextureNoise_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD3.zz;\n    u_xlat0.xy = _Time.yy * _NoisespeedXYEmissonZPowerW.xy + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy + vec2(0.200000003, 0.400000006);\n    u_xlat10_0.xyz = texture2D(_TextureNoise, u_xlat0.xy).xyz;\n    u_xlat0.xyz = log2(u_xlat10_0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * _NoisespeedXYEmissonZPowerW.www;\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * _NoisespeedXYEmissonZPowerW.www;\n    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);\n    u_xlat1.xyz = (-_Maincolor.xyz) + _Noisecolor.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz + _Maincolor.xyz;\n    u_xlat1.xy = vs_TEXCOORD3.xy * _Dissolvenoise_ST.xy + _Dissolvenoise_ST.zw;\n    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD3.zz;\n    u_xlat1.xy = _Time.yy * _DissolvespeedXY.xy + u_xlat1.xy;\n    u_xlat10_12 = texture2D(_Dissolvenoise, u_xlat1.xy).x;\n    u_xlat1.xy = vs_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat10_1 = texture2D(_MainTex, u_xlat1.xy);\n    u_xlat2 = u_xlat10_12 * u_xlat10_1.x + (-u_xlat10_12);\n    u_xlat12 = _Usetexturedissolve * u_xlat2 + u_xlat10_12;\n    u_xlatb2 = vs_TEXCOORD0.z>=u_xlat12;\n    u_xlat6.x = (u_xlatb2) ? 0.0 : 1.0;\n    u_xlat2 = u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat6.xxx;\n    u_xlat6.xyz = u_xlat0.xyz * u_xlat10_1.xyz + (-u_xlat0.xyz);\n    u_xlat0.xyz = vec3(_Usetexturecolor) * u_xlat6.xyz + u_xlat0.xyz;\n    u_xlat1.xyz = _Dissolvecolor.xyz * u_xlat10_1.xyz + (-_Dissolvecolor.xyz);\n    u_xlat13 = u_xlat10_1.w * vs_COLOR0.w;\n    u_xlat1.xyz = vec3(_Usetexturecolor) * u_xlat1.xyz + _Dissolvecolor.xyz;\n    u_xlat1.xyz = (-u_xlat0.xyz) + u_xlat1.xyz;\n    u_xlat6.x = (-vs_TEXCOORD0.z) + 1.0;\n    u_xlat6.x = u_xlat6.x * 1.29999995 + u_xlat12;\n    u_xlat12 = vs_TEXCOORD0.w * 1.29999995 + u_xlat12;\n    u_xlat12 = u_xlat12 + -0.649999976;\n    u_xlat12 = u_xlat12 * 30.0 + -15.0;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat3.w = u_xlat12 * _Opacity;\n    u_xlat12 = u_xlat6.x + -0.649999976;\n    u_xlat12 = u_xlat12 * 11.0 + -4.0;\n    u_xlat12 = u_xlat12 * 3.0;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat12 = u_xlat2 * u_xlat12;\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat1.xyz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * _NoisespeedXYEmissonZPowerW.zzz;\n    u_xlat3.xyz = u_xlat0.xyz * vs_COLOR0.xyz;\n    SV_Target0 = u_xlat3;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0;\n    vs_TEXCOORD3.xyz = in_TEXCOORD1.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _NoisespeedXYEmissonZPowerW;\nuniform \tfloat _Usetexturecolor;\nuniform \tvec4 _Maincolor;\nuniform \tvec4 _Noisecolor;\nuniform \tvec4 _Dissolvenoise_ST;\nuniform \tvec4 _TextureNoise_ST;\nuniform \tfloat _Usetexturedissolve;\nuniform \tvec4 _DissolvespeedXY;\nuniform \tvec4 _Dissolvecolor;\nuniform \tfloat _Opacity;\nUNITY_LOCATION(0) uniform mediump sampler2D _TextureNoise;\nUNITY_LOCATION(1) uniform mediump sampler2D _Dissolvenoise;\nUNITY_LOCATION(2) uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec4 u_xlat16_1;\nfloat u_xlat2;\nbool u_xlatb2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nfloat u_xlat12;\nmediump float u_xlat16_12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = vs_TEXCOORD0.xy * _TextureNoise_ST.xy + _TextureNoise_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD3.zz;\n    u_xlat0.xy = _Time.yy * _NoisespeedXYEmissonZPowerW.xy + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy + vec2(0.200000003, 0.400000006);\n    u_xlat16_0.xyz = texture(_TextureNoise, u_xlat0.xy).xyz;\n    u_xlat0.xyz = log2(u_xlat16_0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * _NoisespeedXYEmissonZPowerW.www;\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * _NoisespeedXYEmissonZPowerW.www;\n    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);\n    u_xlat1.xyz = (-_Maincolor.xyz) + _Noisecolor.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz + _Maincolor.xyz;\n    u_xlat1.xy = vs_TEXCOORD3.xy * _Dissolvenoise_ST.xy + _Dissolvenoise_ST.zw;\n    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD3.zz;\n    u_xlat1.xy = _Time.yy * _DissolvespeedXY.xy + u_xlat1.xy;\n    u_xlat16_12 = texture(_Dissolvenoise, u_xlat1.xy).x;\n    u_xlat1.xy = vs_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat16_1 = texture(_MainTex, u_xlat1.xy);\n    u_xlat2 = u_xlat16_12 * u_xlat16_1.x + (-u_xlat16_12);\n    u_xlat12 = _Usetexturedissolve * u_xlat2 + u_xlat16_12;\n    u_xlatb2 = vs_TEXCOORD0.z>=u_xlat12;\n    u_xlat6.x = (u_xlatb2) ? 0.0 : 1.0;\n    u_xlat2 = u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat6.xxx;\n    u_xlat6.xyz = u_xlat0.xyz * u_xlat16_1.xyz + (-u_xlat0.xyz);\n    u_xlat0.xyz = vec3(_Usetexturecolor) * u_xlat6.xyz + u_xlat0.xyz;\n    u_xlat1.xyz = _Dissolvecolor.xyz * u_xlat16_1.xyz + (-_Dissolvecolor.xyz);\n    u_xlat13 = u_xlat16_1.w * vs_COLOR0.w;\n    u_xlat1.xyz = vec3(_Usetexturecolor) * u_xlat1.xyz + _Dissolvecolor.xyz;\n    u_xlat1.xyz = (-u_xlat0.xyz) + u_xlat1.xyz;\n    u_xlat6.x = (-vs_TEXCOORD0.z) + 1.0;\n    u_xlat6.x = u_xlat6.x * 1.29999995 + u_xlat12;\n    u_xlat12 = vs_TEXCOORD0.w * 1.29999995 + u_xlat12;\n    u_xlat12 = u_xlat12 + -0.649999976;\n    u_xlat12 = u_xlat12 * 30.0 + -15.0;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat3.w = u_xlat12 * _Opacity;\n    u_xlat12 = u_xlat6.x + -0.649999976;\n    u_xlat12 = u_xlat12 * 11.0 + -4.0;\n    u_xlat12 = u_xlat12 * 3.0;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat12 = u_xlat2 * u_xlat12;\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat1.xyz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * _NoisespeedXYEmissonZPowerW.zzz;\n    u_xlat3.xyz = u_xlat0.xyz * vs_COLOR0.xyz;\n    SV_Target0 = u_xlat3;\n    return;\n}\n\n"]